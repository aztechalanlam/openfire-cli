#!/bin/bash

# 2016 lgg https://github.com/lgg/openfire-cli
# needed jq 1.4 (apt install jq)
# https://stedolan.github.io/jq/

# usage ./of-cli-uapi ACTION USERNAME PASSWORD

## Define this variables
apiPort="9091"
apiHost="localhost"
apiKey="YOURAPIKEYHERE"

## Internal vars

ofUsage="command usage: ./of-cli-uapi ACTION USERNAME PASSWORD"
ofActions="ACTIONS: list/get/add/delete"

## Check given arguments
if [ -z "$1" ]; then
    echo "ERR: no ACTION specified"
    echo "$ofUsage"
    echo "$ofActions"
    exit 1
else
    apiAction="$1"
fi
if [[ "$apiAction" != "list" && -z "$2" ]]; then
    echo "ERR: no USERNAME specified"
    echo "$ofUsage"
    exit 1
else
    apiUser="$2"
fi
if [[ "$apiAction" = "add" && -z "$3" ]]; then
    echo "ERR: no PASSWORD specified"
    echo "$ofUsage"
    exit 1
else
    apiPass="$3"
fi

## curl help:
# -k = --insecure = allow self-signed certificates
# -s = --silent = hide curl output (table with speed, downloaded, etc)

## functions
function getUser {
    apiUrl="https://$apiHost:$apiPort/plugins/restapi/v1/users/$apiUser"
    userExist=$(curl -sk -H "Authorization: $apiKey" -H "Accept: application/json" -H "Content-Type: application/json" -X GET "$apiUrl" | jq '.' | jq {username} | jq '.[] != null')
    echo $userExist
}

function listUsers {
    apiUrl="https://$apiHost:$apiPort/plugins/restapi/v1/users/"
    users=$(curl -sk -H "Authorization: $apiKey" -H "Accept: application/json" -H "Content-Type: application/json" -X GET "$apiUrl" | jq -r '.user' | jq -r '.[].username')
    if [ -z "$users" ]; then
        echo "ERR: wrong API AUTH KEY"
        exit 1
    else
        arrUsers=($users)
        echo "OpenFire registered users: "
        for i in ${arrUsers[@]}; do echo $i; done
    fi
}

function addUser {
    apiUrl="https://$apiHost:$apiPort/plugins/restapi/v1/users/"
    apiPostData=$(jq -n --arg u "$apiUser" --arg p "$apiPass" '{"username": $u, "password": $p}')
    userResult=$(curl -sk -H "Authorization: $apiKey" -H "Accept: application/json" -H "Content-Type: application/json" -d "$apiPostData" -X POST "$apiUrl" | jq '.' | jq {exception} | jq '.[] == "UserAlreadyExistsException"')
    if [ "$userResult" = "true" ]
    then
        echo "User already registered"
    else
        echo "Done, also APIKEY maybe wrong"
    fi
}

function deleteUser {
    apiUrl="https://$apiHost:$apiPort/plugins/restapi/v1/users/$apiUser"
    userResult=$(curl -sk -H "Authorization: $apiKey" -H "Accept: application/json" -H "Content-Type: application/json" -X DELETE "$apiUrl" | jq '.' | jq {exception} | jq '.[] == "UserNotFoundException"')
    if [ "$userResult" = "true" ]
        then
            echo "No user with this username. Didn't delete."
        else
            echo "Done, also APIKEY maybe wrong"
        fi
}

## get and execute action
if [ "$apiAction" = "get" ]
then
    getUser
elif [ "$apiAction" = "list" ]
then
    listUsers
elif [ "$apiAction" = "add" ]
then
    addUser
elif [ "$apiAction" = "delete" ]
then
    deleteUser
else
    echo "ERR: wrong ACTION"
    echo "$ofUsage"
    echo "$ofActions"
    exit 1
fi